// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestFileStream.Models;

namespace TestFileStream.Migrations
{
    [DbContext(typeof(PDFDocContext))]
    partial class PDFDocContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestFileStream.Models.TestDocument", b =>
                {
                    b.Property<int>("Guid");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnName("file_type")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(50);

                    b.HasKey("Guid");

                    b.ToTable("TestDocument");
                });

            modelBuilder.Entity("TestFileStream.Models.WordDocument", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnName("content");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnName("file_type")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Guid");

                    b.HasIndex("Guid")
                        .IsUnique()
                        .HasName("UQ__WordDocu__A2B5777DA3B7279F");

                    b.ToTable("WordDocument");
                });
#pragma warning restore 612, 618
        }
    }
}
